//Design Code
module sr_latch(output reg q,output wire qbar,input s,r,clk);
  always@(clk)
    begin
      if(clk==1'b1)
        begin
          case({s,r})
            2'b00:q=q;
            2'b01:q=1'b0;
            2'b10:q=1'b1;
            2'b11:q=1'bx;
            default:q=1'bx;
          endcase
        end
      else
        begin
          q=q;
        end
    end
  assign qbar=~q;
endmodule
module master_slave_srlatch(output wire q,qbar,input clk,s,r,pre,clr);
  wire qm,qmbar;
  wire q1;
  assign q1=q;
  sr_latch master(qm,qmbar,s,r,clk);
  sr_latch slave(q1,qbar,qm,qmbar,~clk);
   assign q = pre ? 1'b1 : (clr ? 1'b0 : q1);
  assign qbar=~q;
endmodule

//Test Bench Code
module tb();
  reg s,r,clk,pre,clr;
  wire q,qbar;
  master_slave_srlatch DUT(q,qbar,clk,s,r,pre,clr);
  
  initial
    begin
      clk=1'b0;
      forever #5 clk=~clk;
    end
  
  initial
    begin
      pre=1'b1;
      #20;
      pre=1'b0;
      clr=1'b0;
      #10;
      clr=1'b1;
      s=1'b0; r=1'b1;
      #15;
      s=1'b1; r=1'b0;
      #10;
      $finish;
    end
  
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
  
  initial
    begin
      $timeformat(-9,0,"ns",10);
      $monitor("time=%0t,clk=%b,pre=%b,clr=%b,s=%b,r=%b,q=%b,qbar=%b",$time,clk,s,r,pre,clr,q,qbar);
    end
endmodule

